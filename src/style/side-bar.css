/*GENERAL CSS*/

const SideBar = styled.div`
  width: 20%;
	background-color: white;
	display:  flex;
	flex-direction: column;
	overflow: auto;
	
@media (max-width: 992px){
		width: 100%;
		height: 15%;
		flex-direction: row;
	}
`

/*NEW FOLDER CSS*/
const NewFolderButton = styled.div`
	cursor: pointer;
	display: flex;
	justify-content: center;
	align-items: center;
	margin: 5%;
	border-radius: 10px;

  &:hover{
	background-color: rgba(112,112,112,0.5);
	
@media (max-width: 992px){
		margin: 0px 10px 0px 0px;
	}
}`

const NewFolderIcon = styled.img`
	height: 30px;
	width: 30px;
`
const NewFolderPopup = styled.div`
	position: fixed;
	display:  flex;
	justify-content: space-around;
	align-items: center;
	height: 100vh;
	width: 100vw;
	top: 0;
	background-color:rgba(0,0,0,0.5)
`
const NewFolderBox = styled.div`
	display:  flex;
	flex-direction: column;
	justify-content:space-around;
	align-items: center;
	background-color:white;
	width: 60%;
	height: 175px;
	padding: 10px;
	gap: 10px;
`
const NewFolderBoxChild = styled.div`
	display:  flex;
	text-align: center;
	justify-content: center;
	width: 100%;
`
const NewFolderBoxChild3 = styled(NewFolderBoxChild)`
	gap: 5px;
	justify-content: flex-end;
  padding: 5px;
`
const NewFolderMessage = styled.p`
 width: 100%;
 color: ${props => props.error ? "red" : "#2055c0"};
`

const NewFolderForm = styled.form`
	width: 100%;
`
const NewFolderInput = styled.input`
	border: none;
	text-decoration: none;
	outline: none;
	border-bottom: 2px #2055c0 solid;
	width: 100%;
`
const NewFolderCancel = styled.div`
	cursor: pointer;
	color: #2055c0;
`
const NewFolderSend = styled.div`
	cursor: pointer;
	background-color: #2055c0;
	color: white;
	border-radius: 3px;
  padding: 2px;
`
const NewFolderLoading = styled.img`
	width: 50px;
	height: 50px;
`

const NewFolderLoading = keyframes`
  0%{
      left: 40%;
  }
  100%{
      left: 50%;
  }
`
const NewFolderBoxChild2 = styled(NewFolderBoxChild)`
  position : ${props => props.loading ? "relative" ? ""};
  
${({ loading }) => loading &&
    css`
      &:before {
       margin-top: 2px;
	     content: "";
	     width: 10%;
	     top: 100%;
	     left: 45%;
	     position: absolute;
	     border-bottom: 2px #2055c0 solid;
	     animation: ${NewFolderLoading} infinite alternate 0.5s;
      }
`}
`





/* FOLDER LIST CSS  */
const FolderList = styled.div`
	display: flex;
	flex-direction: column;
	
media (max-width: 992px){
		flex-direction: row;
		align-items: center;

	}
`

/* FOLDER CSS */
const Folder = styled.div`
	border-radius: 10px 10px 10px 10px;
	cursor: pointer;
	height: 50px;
	display:  flex;
	flex-direction: column;
	justify-content: center;
	border: solid 1px rgba(112,112,112,0.5);
	margin: 0px 10px 8px 10px;
	background-color: ${props => props.active ? "rgba(112,112,112,0.5)" : "none"};
 &:hover{
	background-color: rgba(112,112,112,0.5);
}
@media (max-width: 992px){
		width: 130px;
		margin: 0px 5px 0px 5px;	

	}
`

const FolderStatus = styled.div`
	display:  flex;
	justify-content: space-around;
	margin-top: 2%;
`
const StatusCounter = styled.p`
  font-weight: bold;
	color:white;
	border-radius: 20px;
	width: 10%;
	text-align: center;
	background-color: ${props => props.color}
`



const FolderName = styled.p`
	text-align: center;
	white-space: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
`


@media (max-width: 992px) {

	#side-bar



	#folder-list

@

	#folder



	#new-folder-button


}
